{"version":3,"sources":["api/handlers.ts","api/axios.ts","api/useGet.ts","components/Loader/index.jsx","utils/styles.ts","components/Buttons/GradientCancelButton.tsx","components/Buttons/GradientConfirmButton.tsx","utils/localization.ts","context/locations.tsx","hooks/useLocations.ts","components/DrawersComponents/DrawerBox.tsx","components/DrawersComponents/CustDrawerHeader.tsx","components/DrawersComponents/CustDrawerBody.tsx","components/AddCategoryDrawer/schema.ts","api/usePost.ts","components/AddCategoryDrawer/index.tsx","hooks/useLocalizationRouteName.ts","utils/icons.tsx","utils/routes.ts","components/SecondatyLayoutMenu.tsx/index.tsx","components/AddSubCategoriesDrawer/schema.ts","components/AddSubCategoriesDrawer/index.tsx","hooks/usePolling.ts","components/Categories/CategoryItem.tsx","components/Categories/index.tsx","components/Goods/GoodItem.tsx","components/Goods/index.tsx","components/LoginDrawer/index.tsx","components/DefaultLayout/Logo.tsx","components/SwitchLocation/index.tsx","components/DefaultLayoutMenu/index.tsx","components/MenuDrawer/index.tsx","hooks/useBreakpoints.ts","components/DefaultLayout/index.tsx","App.tsx","index.tsx"],"names":["handleErrorRequest","error","headers","response","data","handleSuccessRequest","status","instance","axios","create","baseURL","useGet","path","options","useState","isLoading","setIsLoading","setError","result","setResult","setHeaders","onSuccess","onError","apiVersion","queries","resetOnSuccess","resetOnError","reset","useCallback","handleError","newError","err","handleResponse","newHeaders","useEffect","get","a","payload","params","Loader","children","justifyContent","thickness","speed","emptyColor","color","size","gradientActive","GradienCanceltButton","rest","bg","_hover","GradientConfirmButton","localization","ru","app","buttonLogin","loginHeader","loginPlaceholder","loginPasswordPlaceholder","regisration","buttonSave","buttonCancel","buttonCard","buttonTable","buttonAdd","buttonAddSubCategories","goodsHeader","categoriesHeader","drawerMenuHeader","drawerNewCategory","form","category","label","placeholder","add","subCategory","en","LocationsContext","createContext","LocationsProvider","React","location","setLocation","Provider","value","useLocations","useContext","DrawerBox","mx","CustDrawerHeader","p","CustDrawerBody","my","AddCategorySchema","yup","shape","name","notOneOf","required","subCategories","notRequired","of","usePost","post","config","AddCategoryDrawer","isOpen","onClose","useForm","defaultValues","shouldUnregister","resolver","yupResolver","mode","reValidateMode","formState","errors","control","watch","trigger","register","addCategory","success","placement","spacing","render","props","isInvalid","Boolean","message","direction","mr","onClick","isDisabled","isValid","useLocalizationRouteName","history","useHistory","header","pathname","getLocalizationRouteName","UserIcon","as","FaUserCircle","MenuIcon","AiOutlineMenu","LanguageIcon","MdLanguage","CardIcon","AiOutlineCreditCard","DeleteIcon","FiDelete","SecondaryLayoutMenu","setPathname","useDisclosure","isOpenAddCategoryDrawer","onOpenAddCategoryDrawer","onOpen","onCloseAddCategoryDrawer","listen","alignItems","routes","rightIcon","AddSubCategoriesSchema","AddSubCategoriesDrawer","categoryId","subcategories","useFieldArray","fields","append","remove","addSubCategories","length","map","field","index","ref","defaultValue","aria-label","colorScheme","icon","id","usePolling","isActive","request","interval","statusPolling","setInterval","clearInterval","CategoryItem","isOpenAddSubCategoriesDrawer","onOpenAddSubCategoriesDrawer","onCloseAddSubCategoriesDrawer","getSubcategories","Box","w","templateColumns","gap","textAlign","e","stopPropagation","pb","subcategory","Categories","defaultIndex","allowMultiple","categories","GoodItem","Goods","goods","good","LoginDrawer","useRef","initialFocusRef","top","right","padding","type","Logo","margin","letterSpacing","fontSize","SwitchLocation","DefaultLayoutMenu","setPathName","checkoutRoute","push","_active","MenuDrawer","variant","useBreakpoints","theme","useTheme","useMediaQuery","breakpoints","isXSmall","isSmall","isMedium","isLarge","DefaultLayout","flexDirection","position","width","height","zIndex","pt","App","resetCSS","exact","component","to","WebFont","load","google","families","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf994f4.chunk.js","sourcesContent":["export const handleErrorRequest = (error: any, headers?: any) => {\n  if (error.response?.data?.error) {\n    return { error: error.response.data.error, headers, data: null }\n  }\n  return { error, headers, data: null }\n}\nexport const handleSuccessRequest = (response: any) => {\n  const { data, headers, status } = response\n  if (data.error) {\n    return handleErrorRequest(data.error, headers)\n  }\n  return data\n    ? { data, headers, error: null }\n    : { data: status, headers, error: null }\n}\n","import axios from \"axios\";\n\nexport const instance = axios.create({\n  baseURL:\n    \"https://us-central1-antikvariatru-57a0d.cloudfunctions.net/app/api/v1\",\n});\n","import { useState, useCallback, useEffect } from \"react\";\nimport { AxiosRequestConfig } from \"axios\";\n\nimport { handleErrorRequest, handleSuccessRequest } from \"./handlers\";\nimport { instance } from \"./axios\";\nimport { ApiOptions, GetResult, AxiosBaseSuccessRequestFields } from \"./types\";\n\n/* R - тип возвращаемого поля result */\nexport const useGet = <R = {}>(\n  path: string,\n  options: Partial<ApiOptions>\n  //  axiosRequestConfig?: AxiosRequestConfig,\n): GetResult<(R & AxiosBaseSuccessRequestFields) | null> => {\n  /* state */\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>(null);\n  const [result, setResult] = useState<any>(null);\n  const [headers, setHeaders] = useState<any>(null);\n  /* params */\n\n  const {\n    onSuccess,\n    onError,\n    apiVersion,\n    queries = \"\",\n    resetOnSuccess,\n    resetOnError,\n  } = options;\n  /* handlers */\n  const reset = useCallback(() => {\n    setIsLoading(false);\n    setError(null);\n    setResult(null);\n    setHeaders(null);\n  }, []);\n\n  const handleError = useCallback(\n    (newError) => {\n      const { data, error: err } = handleErrorRequest(newError);\n      setResult(data);\n      setError(err);\n    },\n    [setError]\n  );\n\n  const handleResponse = useCallback(\n    (response) => {\n      const {\n        data,\n        error: newError,\n        headers: newHeaders,\n      } = handleSuccessRequest(response);\n      setResult(data);\n      setHeaders(newHeaders);\n      setError(newError);\n    },\n    [setError, setResult]\n  );\n  /* effects */\n  useEffect(() => {\n    if (onError && error) {\n      onError(error);\n    }\n    if (onSuccess && result) {\n      onSuccess(result);\n    }\n  }, [error, result, onError, onSuccess]);\n  useEffect(() => {\n    if (resetOnSuccess && result) {\n      reset();\n    }\n    if (resetOnError && error) {\n      reset();\n    }\n  }, [resetOnSuccess, resetOnError, result, error, reset]);\n\n  /* call */\n  const get = useCallback(\n    async (payload = {}) => {\n      setIsLoading(true);\n\n      setError(null);\n\n      try {\n        const response = await instance.get(path, { params: payload });\n        handleResponse(response);\n        return response.data;\n      } catch (caughtError) {\n        handleError(caughtError);\n        return caughtError;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [\n      queries,\n      apiVersion,\n      path,\n      // axiosRequestConfig,\n      handleResponse,\n      handleError,\n    ]\n  );\n  /* result */\n  return {\n    get,\n    reset,\n    result,\n    headers,\n    error,\n    isLoading,\n  };\n};\n","import { Flex, Spinner } from '@chakra-ui/react'\nimport React from 'react'\n\nconst Loader = ({ isLoading, children }) => {\n  if (isLoading) {\n    return (\n      <Flex justifyContent=\"center\">\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    )\n  }\n  return <>{children}</>\n}\n\nexport default Loader\n","export const gap = 4\nexport const spacing = gap\nexport const padding = gap\nexport const margin = gap\nexport const gradientConfirm = 'linear-gradient(#43cea2, #185a9d)'\nexport const gradientHoverConfirm = 'linear-gradient(#185a9d, #43cea2)'\nexport const gradientCancel = 'linear-gradient(#d66d75, #e29587)'\nexport const gradientHoverCancel = 'linear-gradient(#e29587, #d66d75)'\nexport const gradientActive = 'linear-gradient(#000428, #004e92)'\n","import { Button, ButtonProps } from '@chakra-ui/react'\nimport React from 'react'\nimport { gradientCancel, gradientHoverCancel } from 'utils/styles'\n\nconst GradienCanceltButton: React.FC<ButtonProps> = ({ children, ...rest }) => {\n  return (\n    <Button\n      bg={gradientCancel}\n      _hover={{ bg: gradientHoverCancel }}\n      color=\"#fff\"\n      size=\"sm\"\n      {...rest}\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default GradienCanceltButton\n","import { Button, ButtonProps } from '@chakra-ui/react'\nimport React from 'react'\nimport { gradientConfirm, gradientHoverConfirm } from 'utils/styles'\n\nconst GradientConfirmButton: React.FC<ButtonProps> = ({\n  children,\n  ...rest\n}) => {\n  return (\n    <Button\n      bg={gradientConfirm}\n      _hover={{ bg: gradientHoverConfirm }}\n      color=\"#fff\"\n      size=\"sm\"\n      {...rest}\n    >\n      {children}\n    </Button>\n  )\n}\n\nexport default GradientConfirmButton\n","export interface LocalizationItemForm {\n  label: string;\n  placeholder: string;\n  add: string;\n}\nexport interface LocalizationItem {\n  app: string;\n  buttonLogin: string;\n  loginHeader: string;\n  loginPlaceholder: string;\n  loginPasswordPlaceholder: string;\n  regisration: string;\n  buttonSave: string;\n  buttonCancel: string;\n  buttonCard: string;\n  buttonTable: string;\n  buttonAdd: string;\n  buttonAddSubCategories: string;\n  goodsHeader: string;\n  categoriesHeader: string;\n  drawerMenuHeader: string;\n  drawerNewCategory: string;\n  form: {\n    category: LocalizationItemForm;\n    subCategory: LocalizationItemForm;\n  };\n}\n\nexport interface Localization {\n  en: LocalizationItem;\n  ru: LocalizationItem;\n}\n\nexport const localization: Localization = {\n  ru: {\n    app: \"CRM\",\n    // login\n    buttonLogin: \"Войти\",\n    loginHeader: \"Войдите в свой аккаунт\",\n    loginPlaceholder: \"Введите ваш логин...\",\n    loginPasswordPlaceholder: \"Введите ваш пароль...\",\n    // registration\n    regisration: \"Регистрация\",\n    // buttons\n    buttonSave: \"Сохранить\",\n    buttonCancel: \"Отмена\",\n    buttonCard: \"Карточки\",\n    buttonTable: \"Таблица\",\n    buttonAdd: \"Добавить\",\n    buttonAddSubCategories: \"Добавить подкатегории\",\n    //goods\n    goodsHeader: \"Ваши товары\",\n    categoriesHeader: \"Ваши категории\",\n    drawerMenuHeader: \"Меню\",\n    drawerNewCategory: \"Добавление новой категории\",\n    form: {\n      category: {\n        label: \"Наименование категории\",\n        placeholder: \"Введите наименование категории...\",\n        add: \"Сохранить категорию\",\n      },\n      subCategory: {\n        label: \"Наименования подкатегорий\",\n        placeholder: \"Введите наименование подкатегории...\",\n        add: \"Добавить подкатегорию\",\n      },\n    },\n  },\n  en: {\n    app: \"CRM\",\n    // login\n    buttonLogin: \"Sign in\",\n    loginHeader: \"Sign in to your account\",\n    loginPlaceholder: \"Type your login here...\",\n    loginPasswordPlaceholder: \"Type your password here...\",\n    // registration\n    regisration: \"Sign up\",\n    // buttons\n    buttonSave: \"Save\",\n    buttonCancel: \"Cancel\",\n    buttonCard: \"Cards\",\n    buttonTable: \"Table\",\n    buttonAdd: \"Add\",\n    buttonAddSubCategories: \"Add subcategories\",\n    //goods\n    goodsHeader: \"Goods\",\n    categoriesHeader: \"Categories\",\n    drawerMenuHeader: \"Menu\",\n    drawerNewCategory: \"Additing new category\",\n    form: {\n      category: {\n        label: \"Name of category\",\n        placeholder: \"Type category name here...\",\n        add: \"Add category\",\n      },\n      subCategory: {\n        label: \"Name of subcategory\",\n        placeholder: \"Type subcategory name here...\",\n        add: \"Add subcategory\",\n      },\n    },\n  },\n};\n","import React, { createContext } from 'react'\nimport { Locations } from '../types/utility'\nimport { localization, LocalizationItem } from 'utils/localization'\n\nexport interface ILocationsContext {\n  location: Locations\n  localization: LocalizationItem\n  setLocation: React.Dispatch<React.SetStateAction<Locations>>\n}\n\n// @ts-ignore\nexport const LocationsContext = createContext<ILocationsContext>()\n\nexport const LocationsProvider: React.FC = ({ children }) => {\n  const [location, setLocation] = React.useState<Locations>('ru')\n\n  return (\n    <LocationsContext.Provider\n      value={{\n        location,\n        localization: localization[location],\n        setLocation,\n      }}\n    >\n      {children}\n    </LocationsContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { ILocationsContext, LocationsContext } from '../context/locations'\n\nconst useLocations = () => {\n  const context = useContext<ILocationsContext>(LocationsContext)\n  return context\n}\n\nexport default useLocations\n","import { Box, BoxProps } from '@chakra-ui/react'\nimport React from 'react'\nimport { margin } from 'utils/styles'\n\nconst DrawerBox: React.FC<BoxProps> = ({ children, ...rest }) => {\n  return (\n    <Box mx={margin} {...rest}>\n      {children}\n    </Box>\n  )\n}\n\nexport default DrawerBox\n","import { DrawerHeader, ModalHeaderProps } from '@chakra-ui/react'\nimport React from 'react'\nimport { padding } from 'utils/styles'\n\nconst CustDrawerHeader: React.FC<ModalHeaderProps> = ({\n  children,\n  ...rest\n}) => {\n  return (\n    <DrawerHeader p={padding} {...rest}>\n      {children}\n    </DrawerHeader>\n  )\n}\n\nexport default CustDrawerHeader\n","import { Box, DrawerBody, ModalBodyProps } from '@chakra-ui/react'\nimport React from 'react'\nimport { margin } from 'utils/styles'\n\nconst CustDrawerBody: React.FC<ModalBodyProps> = ({ children, ...rest }) => {\n  return (\n    <DrawerBody p={0} {...rest}>\n      <Box my={margin}>{children}</Box>\n    </DrawerBody>\n  )\n}\n\nexport default CustDrawerBody\n","import * as yup from 'yup'\n\nexport const AddCategorySchema = yup.object().shape({\n  name: yup\n    .string()\n    .notOneOf([''], 'Поле обязательно для заполнения')\n    .required('Поле обязательно для заполнения'),\n  subCategories: yup\n    .array()\n    .notRequired()\n    .of(\n      yup.object().shape({\n        name: yup\n          .string()\n          .notOneOf([''], 'Поле обязательно для заполнения')\n          .required('Поле обязательно для заполнения'),\n      }),\n    ),\n})\n","import { useState, useCallback, useEffect } from \"react\";\nimport { AxiosRequestConfig } from \"axios\";\n\nimport { handleErrorRequest, handleSuccessRequest } from \"./handlers\";\nimport { instance } from \"./axios\";\nimport { ApiOptions, AxiosBaseSuccessRequestFields, PostResult } from \"./types\";\n\n/* R - тип возвращаемого поля result */\nexport const usePost = <R = {}>(\n  path: string,\n  options: Partial<ApiOptions>\n  //  axiosRequestConfig?: AxiosRequestConfig,\n): PostResult<(R & AxiosBaseSuccessRequestFields) | null> => {\n  /* state */\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>(null);\n  const [result, setResult] = useState<any>(null);\n  const [headers, setHeaders] = useState<any>(null);\n  /* params */\n\n  const {\n    onSuccess,\n    onError,\n    apiVersion,\n    queries = \"\",\n    resetOnSuccess,\n    resetOnError,\n  } = options;\n  /* handlers */\n  const reset = useCallback(() => {\n    setIsLoading(false);\n    setError(null);\n    setResult(null);\n    setHeaders(null);\n  }, []);\n\n  const handleError = useCallback(\n    (newError) => {\n      const { data, error: err } = handleErrorRequest(newError);\n      setResult(data);\n      setError(err);\n    },\n    [setError]\n  );\n\n  const handleResponse = useCallback(\n    (response) => {\n      const {\n        data,\n        error: newError,\n        headers: newHeaders,\n      } = handleSuccessRequest(response);\n      setResult(data);\n      setHeaders(newHeaders);\n      setError(newError);\n    },\n    [setError, setResult]\n  );\n  /* effects */\n  useEffect(() => {\n    if (onError && error) {\n      onError(error);\n    }\n    if (onSuccess && result) {\n      onSuccess(result);\n    }\n  }, [error, result, onError, onSuccess]);\n  useEffect(() => {\n    if (resetOnSuccess && result) {\n      reset();\n    }\n    if (resetOnError && error) {\n      reset();\n    }\n  }, [resetOnSuccess, resetOnError, result, error, reset]);\n\n  /* call */\n  const post = useCallback(\n    async (payload = {}, config = {}) => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await instance.post(path, payload, config);\n        handleResponse(response);\n        return response.data;\n      } catch (caughtError) {\n        handleError(caughtError);\n        return caughtError;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [\n      path,\n      // axiosRequestConfig,\n      handleResponse,\n      handleError,\n    ]\n  );\n  /* result */\n  return {\n    post,\n    reset,\n    result,\n    headers,\n    error,\n    isLoading,\n  };\n};\n","import {\n  Drawer,\n  DrawerContent,\n  DrawerFooter,\n  DrawerOverlay,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  IconButton,\n  Input,\n  ModalProps,\n  Stack,\n} from \"@chakra-ui/react\";\nimport GradienCanceltButton from \"components/Buttons/GradientCancelButton\";\nimport GradientConfirmButton from \"components/Buttons/GradientConfirmButton\";\nimport useLocations from \"hooks/useLocations\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport React from \"react\";\nimport DrawerBox from \"components/DrawersComponents/DrawerBox\";\nimport CustDrawerHeader from \"components/DrawersComponents/CustDrawerHeader\";\nimport CustDrawerBody from \"components/DrawersComponents/CustDrawerBody\";\nimport { Controller, useFieldArray, useForm } from \"react-hook-form\";\nimport { padding, spacing } from \"utils/styles\";\nimport { IAddCategoryDrawer, IAddCategoryFormData } from \"./types\";\nimport { AddCategorySchema } from \"./schema\";\nimport { DeleteIcon } from \"utils/icons\";\nimport { useGet } from \"api/useGet\";\nimport { usePost } from \"api/usePost\";\n\nconst AddCategoryDrawer: IAddCategoryDrawer = ({ isOpen, onClose }) => {\n  const { localization } = useLocations();\n\n  const {\n    formState,\n    errors,\n    control,\n    watch,\n    trigger,\n    register,\n  } = useForm<IAddCategoryFormData>({\n    defaultValues: {\n      name: \"category\",\n    },\n    shouldUnregister: false,\n    resolver: yupResolver(AddCategorySchema),\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n  });\n\n  React.useEffect(() => {\n    trigger([\"name\"]);\n  }, [trigger]);\n\n  const form = watch();\n\n  const { post, result, isLoading, reset } = usePost<{ success: boolean }>(\n    `/category`,\n    {}\n  );\n\n  const addCategory = React.useCallback(() => {\n    post({\n      name: form.name,\n    });\n  }, [post, form]);\n\n  React.useEffect(() => {\n    if (result?.success) {\n      reset();\n      onClose();\n    }\n  }, [result, reset, onClose]);\n\n  return (\n    <DrawerBox>\n      <Drawer isOpen={isOpen} placement=\"top\" onClose={onClose}>\n        <DrawerOverlay>\n          <DrawerContent>\n            <CustDrawerHeader>\n              {localization.drawerNewCategory}\n            </CustDrawerHeader>\n            <CustDrawerBody>\n              <Stack p={padding} spacing={spacing}>\n                <Controller\n                  name=\"name\"\n                  control={control}\n                  render={(props) => {\n                    return (\n                      <FormControl isInvalid={Boolean(errors.name)}>\n                        <FormLabel>\n                          {localization.form.category.label}\n                        </FormLabel>\n                        <Input\n                          {...props}\n                          placeholder={localization.form.category.placeholder}\n                        />\n                        <FormErrorMessage>\n                          {errors.name?.message}\n                        </FormErrorMessage>\n                      </FormControl>\n                    );\n                  }}\n                />\n              </Stack>\n            </CustDrawerBody>\n            <DrawerFooter p={padding}>\n              <Stack spacing={spacing}>\n                <Stack spacing={spacing} direction=\"row\">\n                  <GradienCanceltButton\n                    mr={3}\n                    onClick={onClose}\n                    isDisabled={isLoading}\n                  >\n                    {localization.buttonCancel}\n                  </GradienCanceltButton>\n                  <GradientConfirmButton\n                    onClick={addCategory}\n                    isDisabled={!formState.isValid || isLoading}\n                  >\n                    {localization.form.category.add}\n                  </GradientConfirmButton>\n                </Stack>\n              </Stack>\n            </DrawerFooter>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </DrawerBox>\n  );\n};\n\nexport default AddCategoryDrawer;\n","import useLocations from \"./useLocations\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction useLocalizationRouteName() {\n  const history = useHistory();\n\n  const { localization } = useLocations();\n\n  const getLocalizationRouteName = (pathname: string) => {\n    switch (pathname) {\n      case \"/goods\":\n        return localization.goodsHeader;\n      case \"/categories\":\n        return localization.categoriesHeader;\n      default:\n        return \"\";\n    }\n  };\n  return {\n    header: getLocalizationRouteName(history.location.pathname),\n  };\n}\n\nexport default useLocalizationRouteName;\n","import React from 'react'\nimport { Icon, IconProps } from '@chakra-ui/react'\nimport { FaUserCircle } from 'react-icons/fa'\nimport { AiOutlineMenu, AiOutlineCreditCard } from 'react-icons/ai'\nimport { MdLanguage } from 'react-icons/md'\nimport { FiDelete } from 'react-icons/fi'\n\nexport const UserIcon: React.FC<IconProps> = (props) => (\n  <Icon as={FaUserCircle} {...props} />\n)\nexport const MenuIcon: React.FC<IconProps> = (props) => (\n  <Icon as={AiOutlineMenu} {...props} />\n)\nexport const LanguageIcon: React.FC<IconProps> = (props) => (\n  <Icon as={MdLanguage} {...props} />\n)\nexport const CardIcon: React.FC<IconProps> = (props) => (\n  <Icon as={AiOutlineCreditCard} {...props} />\n)\nexport const DeleteIcon: React.FC<IconProps> = (props) => (\n  <Icon as={FiDelete} {...props} />\n)\n","export default {\n  goods: \"/goods\",\n  categories: \"/categories\",\n};\n","import { Button, Heading, Stack, useDisclosure } from \"@chakra-ui/react\";\nimport AddCategoryDrawer from \"components/AddCategoryDrawer\";\nimport GradientConfirmButton from \"components/Buttons/GradientConfirmButton\";\nimport useLocalizationRouteName from \"hooks/useLocalizationRouteName\";\nimport useLocations from \"hooks/useLocations\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CardIcon } from \"utils/icons\";\nimport routes from \"utils/routes\";\nimport { spacing } from \"utils/styles\";\n\nconst SecondaryLayoutMenu = () => {\n  const history = useHistory();\n\n  const [pathname, setPathname] = React.useState(history.location.pathname);\n\n  const {\n    isOpen: isOpenAddCategoryDrawer,\n    onOpen: onOpenAddCategoryDrawer,\n    onClose: onCloseAddCategoryDrawer,\n  } = useDisclosure();\n\n  const { localization } = useLocations();\n\n  const { header } = useLocalizationRouteName();\n\n  history.listen((location) => setPathname(location.pathname));\n\n  return (\n    <Stack direction=\"column\" spacing={spacing}>\n      <Stack direction=\"row\" spacing={spacing} alignItems=\"center\">\n        <Heading size=\"xl\">{header}</Heading>\n        {pathname === routes.categories && (\n          <GradientConfirmButton\n            size=\"sm\"\n            onClick={onOpenAddCategoryDrawer}\n            rightIcon={<CardIcon />}\n          >\n            {localization.buttonAdd}\n          </GradientConfirmButton>\n        )}\n      </Stack>\n      <Stack direction=\"row\" spacing={spacing}>\n        <Button size=\"xs\">{localization.buttonCard}</Button>\n        <Button size=\"xs\" isDisabled>\n          {localization.buttonTable}\n        </Button>\n      </Stack>\n      <AddCategoryDrawer\n        isOpen={isOpenAddCategoryDrawer}\n        onClose={onCloseAddCategoryDrawer}\n      />\n    </Stack>\n  );\n};\n\nexport default SecondaryLayoutMenu;\n","import * as yup from \"yup\";\n\nexport const AddSubCategoriesSchema = yup.object().shape({\n  subCategories: yup\n    .array()\n    .notRequired()\n    .of(\n      yup.object().shape({\n        name: yup\n          .string()\n          .notOneOf([\"\"], \"Поле обязательно для заполнения\")\n          .required(\"Поле обязательно для заполнения\"),\n      })\n    ),\n});\n","import {\n  Drawer,\n  DrawerContent,\n  DrawerFooter,\n  DrawerOverlay,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  IconButton,\n  Input,\n  ModalProps,\n  Stack,\n} from \"@chakra-ui/react\";\nimport GradienCanceltButton from \"components/Buttons/GradientCancelButton\";\nimport GradientConfirmButton from \"components/Buttons/GradientConfirmButton\";\nimport useLocations from \"hooks/useLocations\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport React from \"react\";\nimport DrawerBox from \"components/DrawersComponents/DrawerBox\";\nimport CustDrawerHeader from \"components/DrawersComponents/CustDrawerHeader\";\nimport CustDrawerBody from \"components/DrawersComponents/CustDrawerBody\";\nimport { Controller, useFieldArray, useForm } from \"react-hook-form\";\nimport { padding, spacing } from \"utils/styles\";\nimport { IAddSubCategoriesDrawer, IAddSubCategoriesFormData } from \"./types\";\nimport { AddSubCategoriesSchema } from \"./schema\";\nimport { DeleteIcon } from \"utils/icons\";\nimport { usePost } from \"api/usePost\";\n\nconst AddSubCategoriesDrawer: IAddSubCategoriesDrawer = ({\n  categoryId,\n  isOpen,\n  onClose,\n}) => {\n  const { localization } = useLocations();\n\n  const {\n    formState,\n    errors,\n    control,\n    watch,\n    trigger,\n    register,\n  } = useForm<IAddSubCategoriesFormData>({\n    defaultValues: {\n      subcategories: [{ name: \"subcategory\" }, { name: \"subcategory\" }],\n    },\n    shouldUnregister: false,\n    resolver: yupResolver(AddSubCategoriesSchema),\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n  });\n\n  React.useEffect(() => {\n    trigger([\"subcategories\"]);\n  }, [trigger]);\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"subcategories\",\n  });\n\n  const form = watch();\n\n  const { post, result, isLoading, reset } = usePost<{ success: boolean }>(\n    `/subcategories`,\n    {}\n  );\n\n  const addSubCategories = React.useCallback(() => {\n    post({\n      categoryId,\n      subcategories: form.subcategories,\n    });\n  }, [post, categoryId, form]);\n\n  React.useEffect(() => {\n    if (result?.success) {\n      reset();\n      onClose();\n    }\n  }, [result, reset, onClose]);\n\n  return (\n    <DrawerBox>\n      <Drawer isOpen={isOpen} placement=\"top\" onClose={onClose}>\n        <DrawerOverlay>\n          <DrawerContent>\n            <CustDrawerHeader>\n              {localization.drawerNewCategory}\n            </CustDrawerHeader>\n            <CustDrawerBody>\n              <Stack p={padding} spacing={spacing}>\n                {fields.length && (\n                  <FormControl>\n                    <FormLabel>{localization.form.subCategory.label}</FormLabel>\n                    <Stack spacing={spacing}>\n                      {fields.map((field, index) => {\n                        return (\n                          <Stack\n                            key={field.id}\n                            direction=\"row\"\n                            spacing={spacing}\n                          >\n                            <FormControl\n                              isInvalid={Boolean(\n                                errors.subcategories?.[index]?.name\n                              )}\n                            >\n                              <Input\n                                name={`subcategories[${index}].name`}\n                                ref={register()}\n                                defaultValue={field.name}\n                                placeholder={\n                                  localization.form.subCategory.placeholder\n                                }\n                              />\n                              <FormErrorMessage>\n                                {errors.subcategories?.[index]?.name?.message}\n                              </FormErrorMessage>\n                            </FormControl>\n                            <IconButton\n                              aria-label=\"data-delete-subcategory\"\n                              colorScheme=\"red\"\n                              icon={<DeleteIcon />}\n                              onClick={() => remove(index)}\n                              isDisabled={isLoading}\n                            />\n                          </Stack>\n                        );\n                      })}\n                    </Stack>\n                  </FormControl>\n                )}\n              </Stack>\n            </CustDrawerBody>\n            <DrawerFooter p={padding}>\n              <Stack spacing={spacing}>\n                <GradientConfirmButton\n                  onClick={() => append({ name: \"\" })}\n                  isDisabled={isLoading}\n                >\n                  {localization.form.subCategory.add}\n                </GradientConfirmButton>\n                <Stack spacing={spacing} direction=\"row\">\n                  <GradienCanceltButton\n                    mr={3}\n                    onClick={onClose}\n                    isDisabled={isLoading}\n                  >\n                    {localization.buttonCancel}\n                  </GradienCanceltButton>\n                  <GradientConfirmButton\n                    onClick={addSubCategories}\n                    isDisabled={!formState.isValid || isLoading}\n                  >\n                    {localization.form.category.add}\n                  </GradientConfirmButton>\n                </Stack>\n              </Stack>\n            </DrawerFooter>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </DrawerBox>\n  );\n};\n\nexport default AddSubCategoriesDrawer;\n","import { useEffect } from \"react\";\n\ninterface IUsePolling {\n  (\n    isActive: boolean,\n    request: (payload: any) => void,\n    payload: any,\n    interval?: number\n  ): void;\n}\n\nexport const usePolling: IUsePolling = (\n  isActive,\n  request,\n  payload,\n  interval = 5000\n) => {\n  useEffect(() => {\n    let statusPolling: NodeJS.Timeout;\n    if (isActive) {\n      request(payload);\n      statusPolling = setInterval(() => {\n        request(payload);\n      }, interval);\n    }\n    return () => {\n      clearInterval(statusPolling);\n    };\n  }, [isActive, request, payload, interval]);\n};\n","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Grid,\n  Stack,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { useGet } from \"api/useGet\";\nimport AddSubCategoriesDrawer from \"components/AddSubCategoriesDrawer\";\nimport GradientConfirmButton from \"components/Buttons/GradientConfirmButton\";\nimport useLocations from \"hooks/useLocations\";\nimport { usePolling } from \"hooks/usePolling\";\nimport React from \"react\";\nimport { ICategoryItem } from \"types/components/Categories\";\nimport { CardIcon } from \"utils/icons\";\nimport { gap, spacing } from \"utils/styles\";\nimport { ResponseGetSubcategories } from \"./types\";\n\nconst CategoryItem: ICategoryItem = ({ index, id, name }) => {\n  const { localization } = useLocations();\n\n  const {\n    isOpen: isOpenAddSubCategoriesDrawer,\n    onOpen: onOpenAddSubCategoriesDrawer,\n    onClose: onCloseAddSubCategoriesDrawer,\n  } = useDisclosure();\n\n  const { get, result, error, isLoading } = useGet<ResponseGetSubcategories>(\n    `/subcategories`,\n    {}\n  );\n\n  const getSubcategories = React.useCallback(() => {\n    get({\n      categoryId: id,\n    });\n  }, [get, id]);\n\n  usePolling(true, getSubcategories, null, 5000);\n\n  return (\n    <AccordionItem>\n      <AccordionButton as={Box}>\n        <Grid w=\"inherit\" templateColumns=\"auto 1fr 200px auto\" gap={gap}>\n          <Text>{index + 1}.</Text>\n          <Text textAlign=\"left\">{name}</Text>\n          <GradientConfirmButton\n            size=\"xs\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onOpenAddSubCategoriesDrawer();\n            }}\n            rightIcon={<CardIcon />}\n          >\n            {localization.buttonAddSubCategories}\n          </GradientConfirmButton>\n          <AccordionIcon />\n        </Grid>\n      </AccordionButton>\n      <AccordionPanel pb={4}>\n        <Stack spacing={spacing}>\n          {result?.subcategories.map((subcategory) => {\n            return <Text key={subcategory.id}>{subcategory.name}</Text>;\n          })}\n        </Stack>\n      </AccordionPanel>\n      <AddSubCategoriesDrawer\n        categoryId={id}\n        isOpen={isOpenAddSubCategoriesDrawer}\n        onClose={onCloseAddSubCategoriesDrawer}\n      />\n    </AccordionItem>\n  );\n};\n\nexport default CategoryItem;\n","import { Accordion, Stack } from \"@chakra-ui/react\";\nimport { useGet } from \"api/useGet\";\nimport Loader from \"components/Loader\";\nimport SecondaryLayoutMenu from \"components/SecondatyLayoutMenu.tsx\";\nimport React from \"react\";\nimport { margin, spacing } from \"utils/styles\";\nimport CategoryItem from \"./CategoryItem\";\nimport {\n  ICategories,\n  ICategoryItemFromRequest,\n} from \"types/components/Categories\";\nimport { usePolling } from \"hooks/usePolling\";\n\nconst Categories: ICategories = () => {\n  const { get, result, isLoading } = useGet<{\n    categories: ICategoryItemFromRequest[] | null;\n  } | null>(\"/categories\", {});\n\n  usePolling(true, get, null);\n\n  return (\n    <Stack spacing={spacing} mx={margin}>\n      <SecondaryLayoutMenu />\n      <Loader isLoading={false}>\n        <Accordion defaultIndex={[0]} allowMultiple>\n          <Stack spacing={spacing}>\n            {result?.categories?.map((category, index) => (\n              <CategoryItem key={category.id} index={index} {...category} />\n            ))}\n          </Stack>\n        </Accordion>\n      </Loader>\n    </Stack>\n  );\n};\n\nexport default Categories;\n","import { Box, Stack } from '@chakra-ui/react'\nimport React from 'react'\nimport { IGoodItem } from 'types/components/Goods'\n\nconst GoodItem: IGoodItem = ({ id, name }) => {\n  return (\n    <Stack direction=\"row\">\n      <Box>id: {id}</Box>\n      <Box>name: {name}</Box>\n    </Stack>\n  )\n}\n\nexport default GoodItem\n","import { Stack } from \"@chakra-ui/react\";\nimport { useGet } from \"api/useGet\";\nimport Loader from \"components/Loader\";\nimport SecondaryLayoutMenu from \"components/SecondatyLayoutMenu.tsx\";\nimport React, { useEffect } from \"react\";\n\nimport { margin, spacing } from \"utils/styles\";\nimport GoodItem from \"./GoodItem\";\nimport { IGoodItemFromRequest, IGoods } from \"types/components/Goods\";\n\nconst Goods: IGoods = () => {\n  const { get, result, isLoading } = useGet<{\n    goods: IGoodItemFromRequest[] | null;\n  }>(\"/goods\", {});\n\n  useEffect(() => {\n    get();\n  }, [get]);\n\n  return (\n    <Stack spacing={spacing} mx={margin}>\n      <SecondaryLayoutMenu />\n      <Loader isLoading={isLoading}>\n        <Stack spacing={spacing}>\n          {result?.goods?.map((good) => (\n            <GoodItem key={good.id} {...good} />\n          ))}\n        </Stack>\n      </Loader>\n    </Stack>\n  );\n};\n\nexport default Goods;\n","import {\n  Drawer,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerOverlay,\n  Input,\n  Stack,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport GradienCanceltButton from \"components/Buttons/GradientCancelButton\";\nimport GradientConfirmButton from \"components/Buttons/GradientConfirmButton\";\nimport CustDrawerBody from \"components/DrawersComponents/CustDrawerBody\";\nimport CustDrawerHeader from \"components/DrawersComponents/CustDrawerHeader\";\nimport DrawerBox from \"components/DrawersComponents/DrawerBox\";\nimport useLocations from \"hooks/useLocations\";\nimport React from \"react\";\nimport { Nullable } from \"types/utility\";\nimport { UserIcon } from \"utils/icons\";\nimport { margin, padding, spacing } from \"utils/styles\";\n\nconst LoginDrawer = () => {\n  const { localization } = useLocations();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const ref: React.MutableRefObject<Nullable<HTMLInputElement>> = React.useRef(\n    null\n  );\n\n  return (\n    <DrawerBox>\n      <GradientConfirmButton\n        size=\"sm\"\n        onClick={onOpen}\n        rightIcon={<UserIcon />}\n        my={margin}\n      >\n        {localization.buttonLogin}\n      </GradientConfirmButton>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        initialFocusRef={ref}\n      >\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton size=\"md\" top={padding} right={padding} />;{\" \"}\n            <CustDrawerHeader>{localization.loginHeader}</CustDrawerHeader>\n            <CustDrawerBody>\n              <Stack spacing={spacing} padding={padding}>\n                <Input\n                  name=\"data-login-antikvariat-ru\"\n                  ref={ref}\n                  placeholder={localization.loginPlaceholder}\n                />\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder={localization.loginPasswordPlaceholder}\n                />\n              </Stack>\n            </CustDrawerBody>\n            <DrawerFooter>\n              <GradienCanceltButton mr={3} onClick={onClose}>\n                {localization.buttonCancel}\n              </GradienCanceltButton>\n              <GradientConfirmButton>\n                {localization.buttonLogin}\n              </GradientConfirmButton>\n            </DrawerFooter>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </DrawerBox>\n  );\n};\n\nexport default LoginDrawer;\n","import { Box, Text, useTheme } from '@chakra-ui/react'\nimport useLocations from 'hooks/useLocations'\nimport React from 'react'\nimport { ILogo } from 'types/components/Login'\nimport { margin } from 'utils/styles'\n\nconst Logo: ILogo = () => {\n  const { localization } = useLocations()\n\n  return (\n    <Text margin={margin} letterSpacing={2} fontSize=\"2xl\">\n      {localization.app}\n    </Text>\n  )\n}\n\nexport default Logo\n","import { Button, Stack } from '@chakra-ui/react'\nimport useLocations from 'hooks/useLocations'\nimport React from 'react'\nimport { LanguageIcon } from 'utils/icons'\nimport { margin } from 'utils/styles'\n\nconst SwitchLocation: React.FC = () => {\n  const { location, setLocation } = useLocations()\n\n  return (\n    <Stack direction=\"row\" my={margin}>\n      {location === 'en' && (\n        <Button\n          size=\"sm\"\n          onClick={() => setLocation('ru')}\n          rightIcon={<LanguageIcon />}\n        >\n          RU\n        </Button>\n      )}\n      {location === 'ru' && (\n        <Button\n          size=\"sm\"\n          onClick={() => setLocation('en')}\n          rightIcon={<LanguageIcon />}\n        >\n          ENG\n        </Button>\n      )}\n    </Stack>\n  )\n}\n\nexport default SwitchLocation\n","import { Button, Stack, StackProps } from \"@chakra-ui/react\";\nimport useLocations from \"hooks/useLocations\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport routes from \"utils/routes\";\nimport { gradientActive } from \"utils/styles\";\n\nconst DefaultLayoutMenu: React.FC<StackProps> = (props) => {\n  const { localization } = useLocations();\n\n  const history = useHistory();\n\n  const [pathname, setPathName] = React.useState(history.location.pathname);\n\n  const checkoutRoute = (path: string) => () => history.push(path);\n\n  history.listen((location) => {\n    setPathName(location.pathname);\n  });\n\n  return (\n    <Stack {...props}>\n      <Button\n        size=\"xs\"\n        isActive={pathname === routes.goods}\n        _active={{ bg: gradientActive, color: \"#fff\" }}\n        onClick={checkoutRoute(routes.goods)}\n      >\n        {localization.goodsHeader}\n      </Button>\n      <Button\n        size=\"xs\"\n        isActive={pathname === routes.categories}\n        _active={{ bg: gradientActive, color: \"#fff\" }}\n        onClick={checkoutRoute(routes.categories)}\n      >\n        {localization.categoriesHeader}\n      </Button>\n    </Stack>\n  );\n};\n\nexport default DefaultLayoutMenu;\n","import {\n  Button,\n  Drawer,\n  DrawerContent,\n  DrawerFooter,\n  DrawerOverlay,\n  useDisclosure,\n  IconButton,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\nimport DefaultLayoutMenu from \"components/DefaultLayoutMenu\";\nimport CustDrawerBody from \"components/DrawersComponents/CustDrawerBody\";\nimport CustDrawerHeader from \"components/DrawersComponents/CustDrawerHeader\";\nimport DrawerBox from \"components/DrawersComponents/DrawerBox\";\nimport useLocations from \"hooks/useLocations\";\nimport React from \"react\";\nimport { Nullable } from \"types/utility\";\nimport { MenuIcon } from \"utils/icons\";\nimport { margin, padding, spacing } from \"utils/styles\";\n\nconst MenuDrawer = () => {\n  const { localization } = useLocations();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const ref: React.MutableRefObject<Nullable<HTMLInputElement>> = React.useRef(\n    null\n  );\n\n  return (\n    <DrawerBox>\n      <IconButton\n        aria-label=\"data-menu-drawer-antikvariat-ru\"\n        size=\"sm\"\n        colorScheme=\"teal\"\n        onClick={onOpen}\n        my={margin}\n        icon={<MenuIcon />}\n      />\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        initialFocusRef={ref}\n      >\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton size=\"md\" top={padding} right={padding} />;{\" \"}\n            <CustDrawerHeader>{localization.drawerMenuHeader}</CustDrawerHeader>\n            <CustDrawerBody>\n              <DefaultLayoutMenu\n                direction=\"column\"\n                mx={margin}\n                spacing={spacing / 2}\n              />\n            </CustDrawerBody>\n            <DrawerFooter>\n              <Button variant=\"outline\" mr={3} onClick={onClose}>\n                {localization.buttonCancel}\n              </Button>\n              <Button color=\"blue\">{localization.buttonLogin}</Button>\n            </DrawerFooter>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </DrawerBox>\n  );\n};\n\nexport default MenuDrawer;\n","import { useMediaQuery, useTheme } from '@chakra-ui/react'\n\nconst useBreakpoints = () => {\n  const theme = useTheme()\n\n  const [isXSmall] = useMediaQuery(`(max-width: ${theme.breakpoints['xs']})`)\n\n  const [isSmall] = useMediaQuery(`(max-width: ${theme.breakpoints['sm']})`)\n\n  const [isMedium] = useMediaQuery(`(max-width: ${theme.breakpoints['md']})`)\n\n  const [isLarge] = useMediaQuery(`(max-width: ${theme.breakpoints['lg']})`)\n\n  return {\n    isXSmall,\n    isSmall,\n    isMedium,\n    isLarge,\n  }\n}\n\nexport default useBreakpoints\n","import { Flex, Stack, Box } from '@chakra-ui/react'\nimport React from 'react'\nimport { margin, spacing } from 'utils/styles'\nimport LoginDrawer from 'components/LoginDrawer'\nimport Logo from './Logo'\nimport SwitchLocation from 'components/SwitchLocation'\nimport MenuDrawer from 'components/MenuDrawer'\nimport DefaultLayoutMenu from 'components/DefaultLayoutMenu'\nimport useBreakpoints from 'hooks/useBreakpoints'\nimport { IDefaultLayout } from 'types/components/DefaultLayout'\n\nconst DefaultLayout: IDefaultLayout = ({ children }) => {\n  const { isSmall } = useBreakpoints()\n\n  return (\n    <Stack spacing={spacing / 2}>\n      <Flex\n        flexDirection=\"column\"\n        bg=\"#fff\"\n        spacing={0}\n        position=\"fixed\"\n        width=\"100%\"\n        height={90}\n        zIndex={1}\n      >\n        <Flex justifyContent=\"space-between\">\n          <Logo />\n          {!isSmall && (\n            <Stack direction=\"row\" spacing={spacing / 2}>\n              <SwitchLocation />\n              <LoginDrawer />\n            </Stack>\n          )}\n          {isSmall && <MenuDrawer />}\n        </Flex>\n        <DefaultLayoutMenu direction=\"row\" mx={margin} spacing={spacing / 2} />\n      </Flex>\n      <Box pt=\"90px\">{children}</Box>\n    </Stack>\n  )\n}\n\nexport default DefaultLayout\n","import { ChakraProvider, theme, ThemeProvider } from \"@chakra-ui/react\";\nimport Categories from \"components/Categories\";\n\nimport Goods from \"components/Goods\";\nimport { LocationsProvider } from \"context/locations\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport routes from \"utils/routes\";\nimport DefaultLayout from \"./components/DefaultLayout\";\n\nfunction App() {\n  return (\n    <ChakraProvider resetCSS theme={theme}>\n      <ThemeProvider theme={theme}>\n        <LocationsProvider>\n          <BrowserRouter>\n            <DefaultLayout>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  component={() => <Redirect to={routes.goods} />}\n                />\n                <Route exact path={routes.goods} component={Goods} />\n                <Route exact path={routes.categories} component={Categories} />\n              </Switch>\n            </DefaultLayout>\n          </BrowserRouter>\n        </LocationsProvider>\n      </ThemeProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WebFont from \"webfontloader\";\nimport \"moment/locale/ru\";\n\nimport App from \"./App\";\n\nWebFont.load({\n  google: {\n    families: [\"Roboto\"],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// Hot Module Replacement (HMR) - Remove this snippet to remove HMR.\n// Learn more: https://snowpack.dev/concepts/hot-module-replacement\n"],"sourceRoot":""}